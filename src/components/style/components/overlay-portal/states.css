/* =======================================================
   ðŸŒŸ Overlay Portal States
   - Different states for the overlay portal (expanded, collapsed, loading, etc.)
   - Uses data-state attribute for state management
========================================================== */

.overlay-styled .overlay-portal {
    transform-origin: center;
    /* Transition removed */
}

/* === STATES === */
.overlay-styled .overlay-portal[data-state='expanded'] {
    border-radius: var(--di-border-radius);
}

.overlay-styled .overlay-portal[data-state='collapsed'] {
    border-radius: calc(var(--overlay-collapsed-height) / 2);
}

.overlay-styled .overlay-portal[data-state='loading'],
.overlay-styled .overlay-portal[data-state='bubble'] {
    border-radius: 50%;
}

.overlay-styled .overlay-portal[data-state='split'] {
    border-radius: calc(var(--overlay-collapsed-height) / 2);
}

/* Hidden state */
.overlay-styled .overlay-portal[data-hidden='true'] {
    opacity: 0;
    visibility: hidden;
    /* Transition removed */
}

/* Hide empty portals */
.overlay-styled .overlay-portal:empty {
    display: none;
    pointer-events: none;
}

/* Swipe animation states */
.overlay-styled .overlay-container[data-direction='next'] {
    /* Animation removed */
}

.overlay-styled .overlay-container[data-direction='prev'] {
    /* Animation removed */
}
